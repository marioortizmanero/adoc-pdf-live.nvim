*adoc-pdf-live.txt* simple live preview plugin for AsciiDoc PDF documents

Author: Mario Ortiz Manero <marioortizmanero@gmail.com>
Homepage: <https://github.com/marioortizmanero/adoc-pdf-live.nvim>
License: GPLv3

==============================================================================
CONTENTS                                              *adoc-pdf-live-contents*

  1. Introduction..............................................|adoc-pdf-live|
  2. Usage...............................................|adoc-pdf-live-usage|
  3. Commands.........................................|adoc-pdf-live-commands|
  4. Configuration...............................|adoc-pdf-live-configuration|

==============================================================================
INTRODUCTION                                                   *adoc-pdf-live*

Very simple live preview plugin for AsciiDoc PDF documents. HTML live preview
is perfect with the browser plugins [1], but for PDF documents there's nothing
available.

This is a plugin I made for my own use, so I've only tested it on NeoVim
nightly 0.5 [2]. Feel free to open an issue or pull request to fix anything on
your system. This is my first vim plugin ever as well, so there's probably
lots to improve.

[1] https://asciidoctor.cn/docs/editing-asciidoc-with-live-preview/
[2] https://github.com/neovim/neovim

==============================================================================
USAGE                                                    *adoc-pdf-live-usage*

You must setup the plugin in order to use it. For the basic setup with the
default options:

>
    require('adoc_pdf_live').setup()
>

Or, to specify your own custom options (the example lists the default values):

>
    require('adoc_pdf_live').setup {
        enabled = false,
        -- The viewer command must be like `command <file>`
        viewer = 'zathura',
        binary = 'asciidoctor-pdf',
        params = '',
        debug = false,
        style = '',
        style_regex = 'style\\.ya?ml'
    }
>

See the |adoc-pdf-live-configuration| section for more information about the
available options.

Once you have an AsciiDoc file open, you can use the |:AdocPdfLiveStart| command
to compile the document whenever the file is saved. |:AdocPdfLiveOpen| will
additionally open your preferred PDF viewer, and |:AdocPdfLiveStop| will stop
the plugin. For more commands, see |adoc-pdf-live-commands|.

It's highly recommended to use a PDF viewer like zathura [1] which
automatically reloads the file when it's modified, so that the live reloading
is seamless.

Yaml style files [2] are roughly supported. This plugin will automatically
look for one and enable it when compiling the PDF, with the |style_regex|
option. You can override it with the |style| option or the |:AdocPdfLiveStyle|
command.

[1] https://pwmt.org/projects/zathura/
[2] https://github.com/asciidoctor/asciidoctor-pdf/blob/main/docs/theming-guide.adoc

==============================================================================
COMMANDS                                              *adoc-pdf-live-commands*

|:AdocPdfLiveStart|                                          *:AdocPdfLiveStart*

Start compiling the document whenever the AsciiDoc file is saved.

If a style file isn't set, the plugin will try to find one with the configured
regex in the |style-regex| option.

|:AdocPdfLiveOpen|                                            *:AdocPdfLiveOpen*

Start compiling the document whenever the AsciiDoc file is saved and open the
configured PDF viewer with it.

If a style file isn't set, the plugin will try to find one with the configured
regex in the |style-regex| option.

|:AdocPdfLiveStop|                                            *:AdocPdfLiveStop*

Stop compiling the document for each save.

|:AdocPdfLiveStyle|                                          *:AdocPdfLiveStyle*

Given a style yaml file as a parameter, override the current one with it.

|:AdocPdfLiveLogs|                                            *:AdocPdfLiveLogs*

See the logs for the lifetime of the plugin.

|:AdocPdfLiveDebug|                                          *:AdocPdfLiveDebug*

Enable debug mode.

|:AdocPdfLiveNoDebug|                                      *:AdocPdfLiveNoDebug*

Disable debug mode.

==============================================================================
CONFIGURATION                                           *adoc-pdf-live-config*

enabled                                         *adoc-pdf-live-config-enabled*
        Type: `boolean`, Default: `false`

        True when the plugin is enabled. If this is set in the `setup`
        function, this plugin will always be enabled on startup.

viewer                                           *adoc-pdf-live-config-viewer*
        Type: `string`, Default: `'zathura'`

        The PDF viewer ran when using AdocPdfLiveOpen. The command must take
        the filename as its next argument.

binary                                           *adoc-pdf-live-config-binary*
        Type: `string`, Default: `'asciidoctor-pdf'`

        The binary to be ran to compile the file.

params                                           *adoc-pdf-live-config-params*
        Type: `string`, Default: `''`

        Extra arguments given to the compiler binary. This is helpful to
        enable extensions, like `'-r asciidoctor-mathematical'`

style                                             *adoc-pdf-live-config-style*
        Type: `string`, Default: `''`

        The style file to forcefully use. If empty, adoc-pdf-live will look
        for a style file in the current directory automatically, with the
        regex given by |style-regex|.

style-regex                                 *adoc-pdf-live-config-style-regex*
        Type: `string`, Default: `'style\\.ya?ml'`

        The regex used when looking for which style yaml to use, with a
        sed-like format. This plugin will look for a file matching this
        regular expression and enable it when compiling the document with
        `-a pdf-style=FILE`

debug                                             *adoc-pdf-live-config-debug*
        Type: `boolean`, Default: `false`

        Print diagnostic messages.

 vim:tw=78:ts=2:ft=help:norl:
